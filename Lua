---This is the FieldHandler Script in ServerScriptService>FieldManager>FieldHandler
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local ServerScriptService = game:GetService("ServerScriptService")
local Manager = require(ServerScriptService.PlayerData.Manager)

local PlantWheatEvent = ReplicatedStorage.Remotes:WaitForChild("PlantWheatEvent")
local UpdateCountdownEvent = ReplicatedStorage.Remotes:WaitForChild("UpdateCountdownEvent")
local PlantPotatoEvent = ReplicatedStorage.Remotes:WaitForChild("PlantPotatoEvent")
local UpdatePotatoEvent = ReplicatedStorage.Remotes:WaitForChild("UpdatePotatoEvent")
local PlantCarrotEvent = ReplicatedStorage.Remotes:WaitForChild("PlantCarrotEvent")
local UpdateCarrotEvent = ReplicatedStorage.Remotes:WaitForChild("UpdateCarrotEvent")
local PlantCornEvent = ReplicatedStorage.Remotes:WaitForChild("PlantCornEvent")
local UpdateCornEvent = ReplicatedStorage.Remotes:WaitForChild("UpdateCornEvent")

local Growth = Workspace.Growth
local Remotes = ReplicatedStorage.Remotes

local function getPlayerFields(player)
	local playerName = player.Name
	local fieldsFolderName = playerName .. "'s Fields"
	return Workspace:WaitForChild(fieldsFolderName)
end

local function getCropField(player)
	local playerFields = getPlayerFields(player)
	return playerFields
end


local function getPlayerPersonalCropField(player)
	local playerName = player.Name
	local fieldsFolderName = playerName .. "'s Fields"
	local playerPersonalCropField = Workspace:FindFirstChild(fieldsFolderName)
	if playerPersonalCropField then
		return playerPersonalCropField
	end
	return nil
end


Remotes.UpdateMasteryEvent.OnServerEvent:Connect(function(player, amount)
	Manager.AdjustMastery(player, amount)
end)

local function onPromptTriggered(prompt, player)
	local field = prompt.Parent
	local wheatStage3 = field:FindFirstChild("WheatStage3")

	local character = player.Character
	if not character then return end

	local function hasSicle()
		return character:FindFirstChild("Sicle")
	end

	local sicle = hasSicle()

	if not sicle then
		return
	end

	if wheatStage3 then
		
		if prompt.Enabled == false then
			return
		end
		prompt.Enabled = false
		
		character.Humanoid.WalkSpeed = 0

		-- Play the harvesting animation
		local PlayAnimationEvent = sicle:FindFirstChild("PlayAnimationEvent")
		if PlayAnimationEvent then
			PlayAnimationEvent:FireClient(player)
		end

		-- Wait for the animation to finish
		wait(0.6)  -- Adjust this value to match the animation duration

		-- Destroy the plant
		wheatStage3:Destroy()

		-- Destroy the ProximityPrompt
		prompt:Destroy()

		-- Give the player 10 Credits
		local manager = require(ServerScriptService.PlayerData.Manager)
		manager.AdjustCredits(player, 10)

		-- Add harvested Wheat to the player's inventory
		manager.AdjustWheat(player, 1)
		
		Manager.AdjustExp(player,75)
		
		-- Enable player's movement
		character.Humanoid.WalkSpeed = 16  -- Reset the walk speed to the default value
	end
end

local function onPotatoPromptTriggered(prompt, player)
	local field = prompt.Parent
	local potatoStage3 = field:FindFirstChild("PotatoStage3")

	local character = player.Character
	if not character then return end

	local function hasSicle()
		return character:FindFirstChild("Sicle")
	end

	local sicle = hasSicle()

	if not sicle then
		return
	end

	if potatoStage3 then
		
		if prompt.Enabled == false then
			return
		end
		prompt.Enabled = false
		
		-- Disable player's movement
		character.Humanoid.WalkSpeed = 0

		-- Play the harvesting animation
		local PlayAnimationEvent = sicle:FindFirstChild("PlayAnimationEvent")
		if PlayAnimationEvent then
			PlayAnimationEvent:FireClient(player)
		end

		-- Wait for the animation to finish
		wait(0.6)  -- Adjust this value to match the animation duration

		-- Destroy the plant
		potatoStage3:Destroy()

		-- Destroy the ProximityPrompt
		prompt:Destroy()

		-- Give the player 10 Credits
		local manager = require(ServerScriptService.PlayerData.Manager)
		manager.AdjustCredits(player, 10)

		-- Add harvested Potatoes to the player's inventory
		manager.AdjustPotatoes(player, 1)

		-- Enable player's movement
		character.Humanoid.WalkSpeed = 16  -- Reset the walk speed to the default value
	end
end

local function onCarrotPromptTriggered(prompt, player)
	local field = prompt.Parent
	local carrotStage3 = field:FindFirstChild("CarrotStage3")

	local character = player.Character
	if not character then return end

	local function hasSicle()
		return character:FindFirstChild("Sicle")
	end

	local sicle = hasSicle()


	if not sicle then
		return
	end

	if carrotStage3 then
		
		if prompt.Enabled == false then
			return
		end
		prompt.Enabled = false
		
		-- Disable player's movement
		character.Humanoid.WalkSpeed = 0

		-- Play the harvesting animation
		local PlayAnimationEvent = sicle:FindFirstChild("PlayAnimationEvent")
		if PlayAnimationEvent then
			PlayAnimationEvent:FireClient(player)
		end

		-- Wait for the animation to finish
		wait(0.6)  -- Adjust this value to match the animation duration

		-- Destroy the plant
		carrotStage3:Destroy()

		-- Destroy the ProximityPrompt
		prompt:Destroy()

		-- Give the player 10 Credits
		local manager = require(ServerScriptService.PlayerData.Manager)
		manager.AdjustCredits(player, 10)

		-- Add harvested Carrots to the player's inventory
		manager.AdjustCarrots(player, 1)

		-- Enable player's movement
		character.Humanoid.WalkSpeed = 16  -- Reset the walk speed to the default value
	end
end

local function onCornPromptTriggered(prompt, player)
	local field = prompt.Parent
	local cornStage3 = field:FindFirstChild("CornStage3")

	local character = player.Character
	if not character then return end

	local function hasSicle()
		return character:FindFirstChild("Sicle")
	end

	local sicle = hasSicle()

	if not sicle then
		return
	end

	if cornStage3 then

		if prompt.Enabled == false then
			return
		end
		prompt.Enabled = false

		-- Disable player's movement
		character.Humanoid.WalkSpeed = 0

		-- Play the harvesting animation
		local PlayAnimationEvent = sicle:FindFirstChild("PlayAnimationEvent")
		if PlayAnimationEvent then
			PlayAnimationEvent:FireClient(player)
		end

		-- Wait for the animation to finish
		wait(0.6)  -- Adjust this value to match the animation duration

		-- Destroy the plant
		cornStage3:Destroy()

		-- Destroy the ProximityPrompt
		prompt:Destroy()

		-- Give the player 10 Credits
		local manager = require(ServerScriptService.PlayerData.Manager)
		manager.AdjustCredits(player, 10)

		-- Add harvested Corns to the player's inventory
		manager.AdjustCorns(player, 1)

		-- Enable player's movement
		character.Humanoid.WalkSpeed = 16  -- Reset the walk speed to the default value
	end
end


local function createProximityPrompt(field, player)
	local proximityPrompt = Instance.new("ProximityPrompt", field)
	proximityPrompt.ActionText = "Wheat"
	proximityPrompt.ObjectText = "Use Sicle To Harvest"
	proximityPrompt.KeyboardKeyCode = Enum.KeyCode.E
	proximityPrompt.GamepadKeyCode = Enum.KeyCode.ButtonA -- Add this line for gamepad support
	proximityPrompt.RequiresLineOfSight = false
	proximityPrompt.MaxActivationDistance = 10
	proximityPrompt.Triggered:Connect(function()
		onPromptTriggered(proximityPrompt, player)
	end)
end

local function createPotatoProximityPrompt(field, player)
	local proximityPrompt = Instance.new("ProximityPrompt", field)
	proximityPrompt.ActionText = "Potato"
	proximityPrompt.ObjectText = "Use Sicle To Harvest"
	proximityPrompt.KeyboardKeyCode = Enum.KeyCode.E
	proximityPrompt.GamepadKeyCode = Enum.KeyCode.ButtonA -- Add this line for gamepad support
	proximityPrompt.RequiresLineOfSight = false
	proximityPrompt.MaxActivationDistance = 10
	proximityPrompt.Triggered:Connect(function()
		onPotatoPromptTriggered(proximityPrompt, player)
	end)
end

local function createCarrotProximityPrompt(field, player)
	local proximityPrompt = Instance.new("ProximityPrompt", field)
	proximityPrompt.ActionText = "Carrot"
	proximityPrompt.ObjectText = "Use Sicle To Harvest"
	proximityPrompt.KeyboardKeyCode = Enum.KeyCode.E
	proximityPrompt.GamepadKeyCode = Enum.KeyCode.ButtonA -- Add this line for gamepad support
	proximityPrompt.RequiresLineOfSight = false
	proximityPrompt.MaxActivationDistance = 10
	proximityPrompt.Triggered:Connect(function()
		onCarrotPromptTriggered(proximityPrompt, player)
	end)
end

local function createCornProximityPrompt(field, player)
	local proximityPrompt = Instance.new("ProximityPrompt", field)
	proximityPrompt.ActionText = "Corn"
	proximityPrompt.ObjectText = "Use Sicle To Harvest"
	proximityPrompt.KeyboardKeyCode = Enum.KeyCode.E
	proximityPrompt.GamepadKeyCode = Enum.KeyCode.ButtonA -- Add this line for gamepad support
	proximityPrompt.RequiresLineOfSight = false
	proximityPrompt.MaxActivationDistance = 10
	proximityPrompt.Triggered:Connect(function()
		onCornPromptTriggered(proximityPrompt, player)
	end)
end

local function plantWheat(player)
	local profile = Manager.Profiles[player]
	if not profile then return end

	if profile.Data.WheatSeeds < 1 then
		return
	end

	local character = player.Character
	if not character then return end

	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return end
	
	local CropField = getPlayerPersonalCropField(player)
	if not CropField then return end
	
	local nearestField, minDistance = nil, math.huge

	for _, field in ipairs(CropField:GetChildren()) do
		local distance = (humanoidRootPart.Position - field.PrimaryPart.Position).Magnitude
		if distance < minDistance then
			nearestField = field
			minDistance = distance
		end
	end
	
	if minDistance <= 10 then
		local potatoStage1 = nearestField:FindFirstChild("PotatoStage1")
		local potatoStage2 = nearestField:FindFirstChild("PotatoStage2")
		local potatoStage3 = nearestField:FindFirstChild("PotatoStage3")
		local wheatStage1 = nearestField:FindFirstChild("WheatStage1")
		local wheatStage2 = nearestField:FindFirstChild("WheatStage2")
		local wheatStage3 = nearestField:FindFirstChild("WheatStage3")
		local carrotStage1 = nearestField:FindFirstChild("CarrotStage1")
		local carrotStage2 = nearestField:FindFirstChild("CarrotStage2")
		local carrotStage3 = nearestField:FindFirstChild("CarrotStage3")
		local cornStage1 = nearestField:FindFirstChild("CornStage1")
		local cornStage2 = nearestField:FindFirstChild("CornStage2")
		local cornStage3 = nearestField:FindFirstChild("CornStage3")

		if potatoStage1 or potatoStage2 or potatoStage3 or wheatStage1 or wheatStage2 or wheatStage3 or carrotStage1 or carrotStage2 or carrotStage3 or cornStage1 or cornStage2 or cornStage3 then
			return
		end


		Manager.AdjustWheatSeeds(player, -1)

		local wheatStage1 = Growth.WheatStage1:Clone()
		wheatStage1.Parent = nearestField
		wheatStage1:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)

		local countdownGui = Instance.new("BillboardGui")
		countdownGui.Name = "CountdownGui"
		countdownGui.Size = UDim2.new(0, 50, 0, 50)
		countdownGui.StudsOffset = Vector3.new(0, 7, 0)
		countdownGui.Parent = nearestField

		local countdownLabel = Instance.new("TextLabel")
		countdownLabel.Name = "CountdownLabel"
		countdownLabel.Size = UDim2.new(1, 0, 1, 0)
		countdownLabel.BackgroundTransparency = 1
		countdownLabel.Font = Enum.Font.SourceSansBold
		countdownLabel.TextColor3 = Color3.new(1, 1, 1)
		countdownLabel.TextScaled = true
		countdownLabel.Parent = countdownGui

		local stage1GrowthTime = 5
		local stage2GrowthTime = 5
		local totalGrowthTime = stage1GrowthTime + stage2GrowthTime

		local wheatStage2
		for i = totalGrowthTime, 1, -1 do
			-- Replace the line that fires UpdateCountdownEvent with the following line
			UpdateCountdownEvent:FireAllClients(nearestField, i)
			wait(1)
			if i == stage1GrowthTime + 1 then
				wheatStage1:Destroy()
				wheatStage2 = Growth.WheatStage2:Clone()
				wheatStage2.Parent = nearestField
				wheatStage2:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
			end
		end

		wheatStage2:Destroy()
		local wheatStage3 = Growth.WheatStage3:Clone()
		wheatStage3.Parent = nearestField
		wheatStage3:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
		createProximityPrompt(nearestField, player)

		countdownGui:Destroy()
	end
end

local function plantPotato(player)
	local profile = Manager.Profiles[player]
	if not profile then return end

	if profile.Data.PotatoSeeds < 1 then
		return
	end

	local character = player.Character
	if not character then return end

	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return end

	local nearestField, minDistance = nil, math.huge
	
	local CropField = getPlayerPersonalCropField(player)
	if not CropField then return end
	
	for _, field in ipairs(CropField:GetChildren()) do
		local distance = (humanoidRootPart.Position - field.PrimaryPart.Position).Magnitude
		if distance < minDistance then
			nearestField = field
			minDistance = distance
		end
	end

	if minDistance <= 10 then
		local potatoStage1 = nearestField:FindFirstChild("PotatoStage1")
		local potatoStage2 = nearestField:FindFirstChild("PotatoStage2")
		local potatoStage3 = nearestField:FindFirstChild("PotatoStage3")
		local wheatStage1 = nearestField:FindFirstChild("WheatStage1")
		local wheatStage2 = nearestField:FindFirstChild("WheatStage2")
		local wheatStage3 = nearestField:FindFirstChild("WheatStage3")
		local carrotStage1 = nearestField:FindFirstChild("CarrotStage1")
		local carrotStage2 = nearestField:FindFirstChild("CarrotStage2")
		local carrotStage3 = nearestField:FindFirstChild("CarrotStage3")
		local cornStage1 = nearestField:FindFirstChild("CornStage1")
		local cornStage2 = nearestField:FindFirstChild("CornStage2")
		local cornStage3 = nearestField:FindFirstChild("CornStage3")

		if potatoStage1 or potatoStage2 or potatoStage3 or wheatStage1 or wheatStage2 or wheatStage3 or carrotStage1 or carrotStage2 or carrotStage3 or cornStage1 or cornStage2 or cornStage3 then
			return
		end

		Manager.AdjustPotatoSeeds(player, -1)

		local potatoStage1 = Growth.PotatoStage1:Clone()
		potatoStage1.Parent = nearestField
		potatoStage1:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)

		-- The duplicate line has been removed

		-- Rest of the code
		local countdownGui = Instance.new("BillboardGui")
		countdownGui.Name = "CountdownGui"
		countdownGui.Size = UDim2.new(0, 50, 0, 50)
		countdownGui.StudsOffset = Vector3.new(0, 7, 0)
		countdownGui.Parent = nearestField

		local countdownLabel = Instance.new("TextLabel")
		countdownLabel.Name = "CountdownLabel"
		countdownLabel.Size = UDim2.new(1, 0, 1, 0)
		countdownLabel.BackgroundTransparency = 1
		countdownLabel.Font = Enum.Font.SourceSansBold
		countdownLabel.TextColor3 = Color3.new(1, 1, 1)
		countdownLabel.TextScaled = true
		countdownLabel.Parent = countdownGui

		local stage1GrowthTime = 5
		local stage2GrowthTime = 5
		local totalGrowthTime = stage1GrowthTime + stage2GrowthTime

		local potatoStage2
		for i = totalGrowthTime, 1, -1 do
			UpdateCountdownEvent:FireAllClients(nearestField, i)
			wait(1)
			if i == stage1GrowthTime + 1 then
				potatoStage1:Destroy()
				potatoStage2 = Growth.PotatoStage2:Clone()
				potatoStage2.Parent = nearestField
				potatoStage2:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
			end
		end

		potatoStage2:Destroy()
		local potatoStage3 = Growth.PotatoStage3:Clone()
		potatoStage3.Parent = nearestField
		potatoStage3:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
		createPotatoProximityPrompt(nearestField, player)

		countdownGui:Destroy()
	end
end

local function plantCarrot(player)
	local profile = Manager.Profiles[player]
	if not profile then return end

	if profile.Data.CarrotSeeds < 1 then
		return
	end

	local character = player.Character
	if not character then return end

	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return end

	local nearestField, minDistance = nil, math.huge
	
	local CropField = getPlayerPersonalCropField(player)
	if not CropField then return end
	
	for _, field in ipairs(CropField:GetChildren()) do
		local distance = (humanoidRootPart.Position - field.PrimaryPart.Position).Magnitude
		if distance < minDistance then
			nearestField = field
			minDistance = distance
		end
	end

	if minDistance <= 10 then
		local potatoStage1 = nearestField:FindFirstChild("PotatoStage1")
		local potatoStage2 = nearestField:FindFirstChild("PotatoStage2")
		local potatoStage3 = nearestField:FindFirstChild("PotatoStage3")
		local wheatStage1 = nearestField:FindFirstChild("WheatStage1")
		local wheatStage2 = nearestField:FindFirstChild("WheatStage2")
		local wheatStage3 = nearestField:FindFirstChild("WheatStage3")
		local carrotStage1 = nearestField:FindFirstChild("CarrotStage1")
		local carrotStage2 = nearestField:FindFirstChild("CarrotStage2")
		local carrotStage3 = nearestField:FindFirstChild("CarrotStage3")
		local cornStage1 = nearestField:FindFirstChild("CornStage1")
		local cornStage2 = nearestField:FindFirstChild("CornStage2")
		local cornStage3 = nearestField:FindFirstChild("CornStage3")

		if potatoStage1 or potatoStage2 or potatoStage3 or wheatStage1 or wheatStage2 or wheatStage3 or carrotStage1 or carrotStage2 or carrotStage3 or cornStage1 or cornStage2 or cornStage3 then
			return
		end

		Manager.AdjustCarrotSeeds(player, -1)

		local carrotStage1 = Growth.CarrotStage1:Clone()
		carrotStage1.Parent = nearestField
		carrotStage1:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)

		local countdownGui = Instance.new("BillboardGui")
		countdownGui.Name = "CountdownGui"
		countdownGui.Size = UDim2.new(0, 50, 0, 50)
		countdownGui.StudsOffset = Vector3.new(0, 7, 0)
		countdownGui.Parent = nearestField

		local countdownLabel = Instance.new("TextLabel")
		countdownLabel.Name = "CountdownLabel"
		countdownLabel.Size = UDim2.new(1, 0, 1, 0)
		countdownLabel.BackgroundTransparency = 1
		countdownLabel.Font = Enum.Font.SourceSansBold
		countdownLabel.TextColor3 = Color3.new(1, 1, 1)
		countdownLabel.TextScaled = true
		countdownLabel.Parent = countdownGui

		local stage1GrowthTime = 5
		local stage2GrowthTime = 5
		local totalGrowthTime = stage1GrowthTime + stage2GrowthTime

		local carrotStage2
		for i = totalGrowthTime, 1, -1 do
			UpdateCountdownEvent:FireAllClients(nearestField, i)
			wait(1)
			if i == stage1GrowthTime + 1 then
				carrotStage1:Destroy()
				carrotStage2 = Growth.CarrotStage2:Clone()
				carrotStage2.Parent = nearestField
				carrotStage2:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
			end
		end

		carrotStage2:Destroy()
		local carrotStage3 = Growth.CarrotStage3:Clone()
		carrotStage3.Parent = nearestField
		carrotStage3:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
		createCarrotProximityPrompt(nearestField, player)

		countdownGui:Destroy()
	end
end

local function plantCorn(player)
	local profile = Manager.Profiles[player]
	if not profile then return end

	if profile.Data.CornSeeds < 1 then
		return
	end

	local character = player.Character
	if not character then return end

	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return end

	local nearestField, minDistance = nil, math.huge
	
	local CropField = getPlayerPersonalCropField(player)
	if not CropField then return end
	
	for _, field in ipairs(CropField:GetChildren()) do
		local distance = (humanoidRootPart.Position - field.PrimaryPart.Position).Magnitude
		if distance < minDistance then
			nearestField = field
			minDistance = distance
		end
	end

	if minDistance <= 10 then
		local potatoStage1 = nearestField:FindFirstChild("PotatoStage1")
		local potatoStage2 = nearestField:FindFirstChild("PotatoStage2")
		local potatoStage3 = nearestField:FindFirstChild("PotatoStage3")
		local wheatStage1 = nearestField:FindFirstChild("WheatStage1")
		local wheatStage2 = nearestField:FindFirstChild("WheatStage2")
		local wheatStage3 = nearestField:FindFirstChild("WheatStage3")
		local carrotStage1 = nearestField:FindFirstChild("CarrotStage1")
		local carrotStage2 = nearestField:FindFirstChild("CarrotStage2")
		local carrotStage3 = nearestField:FindFirstChild("CarrotStage3")
		local cornStage1 = nearestField:FindFirstChild("CornStage1")
		local cornStage2 = nearestField:FindFirstChild("CornStage2")
		local cornStage3 = nearestField:FindFirstChild("CornStage3")

		if potatoStage1 or potatoStage2 or potatoStage3 or wheatStage1 or wheatStage2 or wheatStage3 or carrotStage1 or carrotStage2 or carrotStage3 or cornStage1 or cornStage2 or cornStage3 then
			return
		end
		
		local hasPlant = false
		for _, child in ipairs(nearestField:GetChildren()) do
			if child:IsA("Model") and child.Name:find("Stage") then
				hasPlant = true
				break
			end
		end

		if hasPlant then
			return
		end

		Manager.AdjustCornSeeds(player, -1)

		local cornStage1 = Growth.CornStage1:Clone()
		cornStage1.Parent = nearestField
		cornStage1:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)

		local countdownGui = Instance.new("BillboardGui")
		countdownGui.Name = "CountdownGui"
		countdownGui.Size = UDim2.new(0, 50, 0, 50)
		countdownGui.StudsOffset = Vector3.new(0, 7, 0)
		countdownGui.Parent = nearestField

		local countdownLabel = Instance.new("TextLabel")
		countdownLabel.Name = "CountdownLabel"
		countdownLabel.Size = UDim2.new(1, 0, 1, 0)
		countdownLabel.BackgroundTransparency = 1
		countdownLabel.Font = Enum.Font.SourceSansBold
		countdownLabel.TextColor3 = Color3.new(1, 1, 1)
		countdownLabel.TextScaled = true
		countdownLabel.Parent = countdownGui

		local stage1GrowthTime = 5
		local stage2GrowthTime = 5
		local totalGrowthTime = stage1GrowthTime + stage2GrowthTime

		local cornStage2
		for i = totalGrowthTime, 1, -1 do
			UpdateCountdownEvent:FireAllClients(nearestField, i)
			wait(1)
			if i == stage1GrowthTime + 1 then
				cornStage1:Destroy()
				cornStage2 = Growth.CornStage2:Clone()
				cornStage2.Parent = nearestField
				cornStage2:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
			end
		end

		cornStage2:Destroy()
		local cornStage3 = Growth.CornStage3:Clone()
		cornStage3.Parent = nearestField
		cornStage3:SetPrimaryPartCFrame(nearestField.PrimaryPart.CFrame)
		createCornProximityPrompt(nearestField, player)

		countdownGui:Destroy()
	end
end




PlantWheatEvent.OnServerEvent:Connect(plantWheat)
PlantPotatoEvent.OnServerEvent:Connect(plantPotato)
PlantCarrotEvent.OnServerEvent:Connect(plantCarrot)
PlantCornEvent.OnServerEvent:Connect(plantCorn)
